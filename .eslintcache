[{"C:\\projeto\\netflixclone\\src\\index.js":"1","C:\\projeto\\netflixclone\\src\\tmdb.js":"2","C:\\projeto\\netflixclone\\src\\Tmdb.js":"3","C:\\projeto\\netflixclone\\src\\components\\Header\\Index.js":"4","C:\\projeto\\netflixclone\\src\\components\\Featured\\FeaturedMovie.js":"5","C:\\projeto\\netflixclone\\src\\components\\App\\App.js":"6","C:\\projeto\\netflixclone\\src\\components\\MovieRow\\MovieRow.js":"7","C:\\projeto\\clone_netflix\\src\\index.js":"8","C:\\projeto\\clone_netflix\\src\\components\\App\\App.js":"9","C:\\projeto\\clone_netflix\\src\\Tmdb.js":"10","C:\\projeto\\clone_netflix\\src\\components\\Header\\Index.js":"11","C:\\projeto\\clone_netflix\\src\\components\\MovieRow\\MovieRow.js":"12","C:\\projeto\\clone_netflix\\src\\components\\Featured\\FeaturedMovie.js":"13"},{"size":213,"mtime":1612361225077,"results":"14","hashOfConfig":"15"},{"size":1992,"mtime":1611944301153,"results":"16","hashOfConfig":"15"},{"size":2550,"mtime":1612291652252,"results":"17","hashOfConfig":"15"},{"size":670,"mtime":1612291657605,"results":"18","hashOfConfig":"15"},{"size":1820,"mtime":1612361109903,"results":"19","hashOfConfig":"15"},{"size":2061,"mtime":1612361224047,"results":"20","hashOfConfig":"15"},{"size":1785,"mtime":1612361159780,"results":"21","hashOfConfig":"15"},{"size":213,"mtime":1612361225077,"results":"22","hashOfConfig":"23"},{"size":2061,"mtime":1612361224047,"results":"24","hashOfConfig":"23"},{"size":2550,"mtime":1612291652252,"results":"25","hashOfConfig":"23"},{"size":670,"mtime":1612291657605,"results":"26","hashOfConfig":"23"},{"size":1785,"mtime":1612361159780,"results":"27","hashOfConfig":"23"},{"size":1820,"mtime":1612361109903,"results":"28","hashOfConfig":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dsqm32",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1dfil8b",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"49"},"C:\\projeto\\netflixclone\\src\\index.js",[],"C:\\projeto\\netflixclone\\src\\tmdb.js",["62"],"C:\\projeto\\netflixclone\\src\\Tmdb.js",["63"],"const API_KEY = 'cb388f7f6f9d56a8c2c8f9c3566a26f1';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFecth = async (endpoint) =>{\r\n    return (await fetch(`${API_BASE}${endpoint}`)).json();\r\n}\r\n\r\nexport default {\r\n     getHomeList : async () =>{\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title : \"Originais do Netflix\",\r\n                items : await basicFecth(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title : \"Recomendados para Você\",\r\n                items : await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title : \"Em Alta\",\r\n                items : await basicFecth(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title : \"Ação\",\r\n                items : await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title : \"Comédia\",\r\n                items : await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title : \"Terror\",\r\n                items : await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title : \"Romance\",\r\n                items : await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },            \r\n            {\r\n                slug: 'documentary',\r\n                title : \"Documentários\",\r\n                items : await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n     },\r\n     getMovieInfo: async (movieId, type) => {\r\n     let info = {};\r\n\r\n     if(movieId) {\r\n         switch(type){\r\n             case 'movie':\r\n                info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n             break;\r\n             case 'tv':\r\n                info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n             break;\r\n             default:\r\n              info = null;\r\n             break;\r\n         }\r\n       }\r\n       return info;\r\n      }\r\n    }",["64","65"],"C:\\projeto\\netflixclone\\src\\components\\Header\\Index.js",["66"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n           <div className=\"header--logo\">\r\n               <a href=\"/\">\r\n                   <img src=\"https://marcas-logos.net/wp-content/uploads/2019/11/Netflix-Logo.png\" alt=\"Netflix-Logo\"></img>\r\n               </a>\r\n           </div>\r\n           <div className=\"header--user\">\r\n               <a href=\"/\">\r\n                   <img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/1bdc9a33850498.56ba69ac2ba5b.png\" alt=\"User-Icon\"></img>\r\n               </a>\r\n           </div>\r\n        </header>\r\n    );\r\n}","C:\\projeto\\netflixclone\\src\\components\\Featured\\FeaturedMovie.js",["67"],"import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({ item }) => {\r\n    console.log(item);\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for (let i in item.genres) {\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length > 200) {\r\n        description = description.substring(0, 200)+'...'\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} Pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} Temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{description}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">►Assistir</a>\r\n                        <a href={`/watch/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","C:\\projeto\\netflixclone\\src\\components\\App\\App.js",["68"],"C:\\projeto\\netflixclone\\src\\components\\MovieRow\\MovieRow.js",["69"],"C:\\projeto\\clone_netflix\\src\\index.js",[],["70","71"],"C:\\projeto\\clone_netflix\\src\\components\\App\\App.js",["72"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from '../../Tmdb';\nimport MovieRow from '../MovieRow/MovieRow';\nimport FeaturedMovie from '../Featured/FeaturedMovie';\nimport Header from '../Header/Index';\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setfeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () =>{\n      //PEGANDO A LISTA TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // PEGANDO O FEATURED\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randonChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setfeaturedData(chosenInfo);\n    }\n\n    loadAll();\n\n  },[]);\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if (window.scrollY > 10){\n        setBlackHeader(true);\n        }else{\n          setBlackHeader(false);\n        }\n    }\n  \n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n      {featuredData &&\n      <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n      <footer>\n        Feito afim de estudos por Alexandre Nardes<br/>\n        Direitos de imagem para Netflix e Disney<br/>\n        Base de dados do site Themoviedb.org        \n      </footer>\n\n      {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\n      </div>\n      }\n    </div>\n  );\n}\n\n","C:\\projeto\\clone_netflix\\src\\Tmdb.js",["73"],"C:\\projeto\\clone_netflix\\src\\components\\Header\\Index.js",["74"],"C:\\projeto\\clone_netflix\\src\\components\\MovieRow\\MovieRow.js",["75"],"import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n\r\nexport default ({ title, items }) => {\r\n\r\n    const [scrollX, setScrollX] = useState(-400);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if( x > 0){\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if ((window.innerWidth - listW) > x ){\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--Left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{ fontSize: 50 }} />\r\n            </div>\r\n            <div className=\"movieRow--Right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{ fontSize: 50 }} />\r\n            </div>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((item, key) => (\r\n                        <div className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\projeto\\clone_netflix\\src\\components\\Featured\\FeaturedMovie.js",["76"],{"ruleId":"77","severity":1,"message":"78","line":9,"column":1,"nodeType":"79","endLine":54,"endColumn":6},{"ruleId":"77","severity":1,"message":"78","line":9,"column":1,"nodeType":"79","endLine":72,"endColumn":6},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"77","severity":1,"message":"84","line":4,"column":1,"nodeType":"79","endLine":19,"endColumn":2},{"ruleId":"77","severity":1,"message":"84","line":4,"column":1,"nodeType":"79","endLine":42,"endColumn":2},{"ruleId":"77","severity":1,"message":"84","line":9,"column":1,"nodeType":"79","endLine":76,"endColumn":2},{"ruleId":"77","severity":1,"message":"84","line":7,"column":1,"nodeType":"79","endLine":51,"endColumn":2},{"ruleId":"80","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"77","severity":1,"message":"84","line":9,"column":1,"nodeType":"79","endLine":76,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":9,"column":1,"nodeType":"79","endLine":72,"endColumn":6},{"ruleId":"77","severity":1,"message":"84","line":4,"column":1,"nodeType":"79","endLine":19,"endColumn":2},{"ruleId":"77","severity":1,"message":"84","line":7,"column":1,"nodeType":"79","endLine":51,"endColumn":2},{"ruleId":"77","severity":1,"message":"84","line":4,"column":1,"nodeType":"79","endLine":42,"endColumn":2},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"Assign arrow function to a variable before exporting as module default",["87"],["88"],"no-global-assign","no-unsafe-negation"]